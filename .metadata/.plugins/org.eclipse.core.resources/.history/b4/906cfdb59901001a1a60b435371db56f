package logica;
import java.util.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyAdapter;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import grafica.prueba;
public class Partida extends JFrame{

	private int tiempo;
	private int dificultad;
	private Felix pj;
	private Ralph boss;
	private Jugador player;
	private Edificio tablero;
	private ArrayList<Objeto> objetosPartida;
	private JLabel img = new JLabel(new ImageIcon("D:\\Descargas\\fixitfelixcortado\\felix\\slice65_65.png"));
	private JLabel edificio = new JLabel(new ImageIcon("D:\\Descargas\\fixitfelixcortado\\edificio\\edificio_150_seccion1.png"));
	private JLabel edificio2 = new JLabel(new ImageIcon("D:\\Descargas\\fixitfelixcortado\\edificio\\edificio_150_seccion2.png"));
	private JLabel edificio3 = new JLabel(new ImageIcon("D:\\Descargas\\fixitfelixcortado\\edificio\\edificio_150_seccion2.png")); 
	private JLabel img2 = new JLabel(new ImageIcon("D:\\Descargas\\fixitfelixcortado\\ralph\\slice163_@.png"));
	private ArrayList<ArrayList<JLabel>> ventanas = new ArrayList<ArrayList<JLabel>>();
	private ArrayList<ArrayList<JLabel>> ventanasArriba = new ArrayList<ArrayList<JLabel>>();
	private ArrayList<ArrayList<JLabel>> ventanasTope = new ArrayList<ArrayList<JLabel>>();
	
	public Partida(String nombre) {
		this.tiempo = 120;
		this.dificultad = 1;
		this.pj = new Felix();
		this.boss = new Ralph();
		this.player = new Jugador(nombre);
		this.tablero = new Edificio(this.dificultad);
		this.objetosPartida = new ArrayList<Objeto>();
	}
	
	
	private void iniciarGUI() {
		this.addKeyListener(new MiAdapter());
		img.setBounds(477, 630, 40, 60);
		edificio.setBounds(352, 352, 320, 340);
		edificio2.setBounds(352, 12, 320, 340);
		edificio3.setBounds(352, -328, 325, 340);
		img2.setBounds(462, 377, 100, 66);
		add(img);
		add(img2);
		crearVentanas(392, 615, this.ventanas);
		crearVentanas(392, 380, this.ventanasArriba);
		add(edificio);
		crearVentanas(392, 145, this.ventanasTope);
		add(edificio2);
		add(edificio3);
		setSize(1024,720);
		setLayout(null);
		setVisible(true);
		setLocationRelativeTo(null);
		setResizable(false);
		getContentPane().setBackground(Color.BLACK);
	}
	
	public class MiAdapter extends KeyAdapter{
		@Override
		public void keyPressed(KeyEvent e) {
			int key = e.getKeyCode();
			System.out.println(key);
			switch (key) {
				case KeyEvent.VK_UP:
					if (pj.mover("Arriba", tablero.getVentanas()))
						movArriba();
				break;
				case KeyEvent.VK_DOWN:
					if (pj.mover("Abajo", tablero.getVentanas()))
						movArriba();
				break;
				case KeyEvent.VK_RIGHT:
					if (pj.mover("Derecha", tablero.getVentanas()))
						movArriba();
				break;
				case KeyEvent.VK_LEFT:
					if (pj.mover("Izquierda", tablero.getVentanas()))
						movArriba();
				break;
			}
		}
	}
	
	
	
	public void movArriba() {
		if ((img.getX() == 477) && (img.getY() == 630)) {
			img.setLocation(img.getX(), img.getY()-95);
			img.repaint();
		} else {
			if ((img.getX() == 477) && (img.getY()-85 == 450)) {
				img.setLocation(img.getX(), img.getY()-85);
				img.repaint();
			} else {
				if (img.getY()-80 >= 400) {
					img.setLocation(img.getX(), img.getY()-80);
					img.repaint();
				}
			}
		}
	}
	
	public void movAbajo() {
		if ((img.getX() == 477) && (img.getY() == 535)) {
			img.setLocation(img.getX(), img.getY()+95);
			img.repaint();
		} else {
			if ((img.getX() == 477) && (img.getY()+85 == 535)) {
				img.setLocation(img.getX(), img.getY()+85);
				img.repaint();
			} else {
				if (img.getY()+80 <= 640) {
					img.setLocation(img.getX(), img.getY()+80);
					img.repaint();
				}
			}
		}
	}
	
	public void movIzquierda() {
		if ((img.getX() == 477) && (img.getY() == 630)) {
			img.setLocation(img.getX(),img.getY()-20);
		} else {
			if ((img.getX()-50 == 477) && (img.getY()+20 == 630)) {
				img.setLocation(img.getX(), img.getY()+20);
			}
		}
		if ((img.getX() == 477) && (img.getY() == 535)) {
			img.setLocation(img.getX(),img.getY()-5);
		} else {
			if ((img.getX()-50 == 477) && (img.getY()+5 == 535)) {
				img.setLocation(img.getX(), img.getY()+5);
			}
		}
		if (img.getX()-50 > 372  ) {
			img.setLocation(img.getX()-50, img.getY());
			img.repaint();
		}
	}
	
	
	public void movDerecha() {
		if ((img.getX() == 477) && (img.getY() == 630)) {
			img.setLocation(img.getX(), img.getY()-20);
		} else {
			if ((img.getX()+50 == 477) && (img.getY()+20 == 630)) {
				img.setLocation(img.getX(), img.getY()+20);
			}
		}
		if ((img.getX() == 477) && (img.getY() == 535)) {
			img.setLocation(img.getX(), img.getY()-5);
		} else {
			if ((img.getX()+50 == 477) && (img.getY()+5 == 535)) {
				img.setLocation(img.getX(), img.getY()+5);
			}
		}
		if (img.getX()+50 < 602) {
			img.setLocation(img.getX()+50, img.getY());
			img.repaint();
		}
	}
	
	private void crearVentanas(int paramX, int paramY, ArrayList<ArrayList<JLabel>> ventanas){
		ArrayList<JLabel> aux1;
		int XAux = paramX; //392;
		for (int x = 0; x < 5; x++) {
			aux1 = new ArrayList<JLabel>();	
				int YAux = paramY; //615;
				for (int y = 0; y < 3; y++) {
					if (x != 2) {
						JLabel AuxLabel = new JLabel(new ImageIcon("D:\\Descargas\\fixitfelixcortado\\ventanas_y_panel\\slice100_@.png"));
						AuxLabel.setBounds(XAux, YAux, 40, 60);
						aux1.add(AuxLabel);
						add(AuxLabel);
					} else {
						if (y == 0) {
							JLabel AuxLabel = new JLabel(new ImageIcon("D:\\Descargas\\fixitfelixcortado\\semicirculares\\slice600_@.png"));
							aux1.add(AuxLabel);
							AuxLabel.setBounds(XAux-10, 590, 61, 97);
							add(AuxLabel);
						} else {
							if (y == 1) {
								JLabel AuxLabel = new JLabel(new ImageIcon("D:\\Descargas\\fixitfelixcortado\\semicirculares\\slice602_@.png"));
								aux1.add(AuxLabel);
								AuxLabel.setBounds(XAux-10, YAux, 62, 60);
								add(AuxLabel);
							} else {
								JLabel AuxLabel = new JLabel(new ImageIcon("D:\\Descargas\\fixitfelixcortado\\ventanas_y_panel\\slice100_@.png"));
								aux1.add(AuxLabel);
								AuxLabel.setBounds(XAux, YAux, 40, 60);
								add(AuxLabel);
							}
						}
					}
					YAux-= 80;
				}
			ventanas.add(aux1);
			XAux += 50;
		}	
	}
	
	
	/** Pregunta si Félix se encuentra con algún elemento de la lista, y de acuerdo al objeto realiza las acciones correspondientes.
	 * Pájaro: reinicia la sección sin perder vidas.
	 * Ladrillo: reinicia el nivel perdiendo una vida.
	 * Torta: Vuelve invulnerable a Félix durante una determinada cantidad de ciclos. **/
	private void gestionarColisiones() {
		if (this.tablero.getVentanas().get(this.pj.getPosFelix().getX()).get(this.pj.getPosFelix().getY()).pajaro()) {
			this.objetosPartida.removeAll(objetosPartida);
			this.tablero.reiniciarEtapa(dificultad);
			this.pj.reset();
			System.out.println("Chocó con un pájaro y se reinició la etapa.");
		} else {
			if (this.tablero.getVentanas().get(this.pj.getPosFelix().getX()).get(this.pj.getPosFelix().getY()).ladrillo()) {
				this.pj.perderVida();
				this.tablero = new Edificio(dificultad);
				this.objetosPartida.removeAll(objetosPartida);
				this.pj.reset();
				System.out.println("Chocó con un ladrillo y se reinicia el nivel.");
			} else {
				if (this.tablero.getVentanas().get(this.pj.getPosFelix().getX()).get(this.pj.getPosFelix().getY()).ladrillo()){
					this.pj.setInvulnerable();
					System.out.println("Félix ahora es invulnerable!");
				}
			}
		}
	}
	
	public Jugador getJugador() {
		return this.player;
	}
	
	
	
}
