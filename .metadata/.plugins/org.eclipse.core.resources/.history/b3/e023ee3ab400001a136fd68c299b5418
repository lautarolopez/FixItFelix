import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyAdapter;
import java.util.*;
public class prueba extends JFrame{
	
	JLabel img = new JLabel(new ImageIcon("D:\\Descargas\\fixitfelixcortado\\felix\\slice65_65.png"));
	JLabel edificio = new JLabel(new ImageIcon("D:\\Descargas\\fixitfelixcortado\\edificio\\edificio_150_seccion1.png"));
	JLabel edificio2 = new JLabel(new ImageIcon("D:\\Descargas\\fixitfelixcortado\\edificio\\edificio_150_seccion2.png"));
	JLabel edificio3 = new JLabel(new ImageIcon("D:\\Descargas\\fixitfelixcortado\\edificio\\edificio_150_seccion2.png")); 
	JLabel img2 = new JLabel(new ImageIcon("D:\\Descargas\\fixitfelixcortado\\ralph\\slice163_@"));
	ArrayList<ArrayList<JLabel>> ventanas = new ArrayList<ArrayList<JLabel>>();
	ArrayList<ArrayList<JLabel>> ventanasArriba = new ArrayList<ArrayList<JLabel>>();
	ArrayList<ArrayList<JLabel>> ventanasTope = new ArrayList<ArrayList<JLabel>>();

	
	
	
	
	
	public prueba() {	
		this.addKeyListener(new MiAdapter());
		img.setBounds(477, 630, 40, 60);
		edificio.setBounds(352, 352, 320, 340);
		edificio2.setBounds(352, 12, 320, 340);
		edificio3.setBounds(352, -328, 325, 340);
		img2.setBounds(462, 262, 100, 66);
		//add(img);
		add(img2);
		//crearVentanas(392, 615, this.ventanas);
		//crearVentanas(392, 380, this.ventanasArriba);
		//add(edificio);
		//crearVentanas(392, 145, this.ventanasTope);
		//add(edificio2);
		//add(edificio3);
		setSize(1024,720);
		setLayout(null);
		setVisible(true);
		setLocationRelativeTo(null);
		setResizable(false);
		getContentPane().setBackground(Color.BLACK);
	}
	
	public static void main(String[]args) {
		prueba proof = new prueba();
	}

	
	public class MiAdapter extends KeyAdapter{
		@Override
		
		
		
		public void keyPressed(KeyEvent e) {
			int key = e.getKeyCode();
			System.out.println(key);
			switch (key) {
				case KeyEvent.VK_UP:
					if ((img.getX() == 477) && (img.getY() == 630)) {
						img.setLocation(img.getX(), img.getY()-95);
						img.repaint();
					} else {
						if ((img.getX() == 477) && (img.getY()-85 == 450)) {
							img.setLocation(img.getX(), img.getY()-85);
							img.repaint();
						} else {
							if (img.getY()-80 >= 400) {
								img.setLocation(img.getX(), img.getY()-80);
								img.repaint();
							}
						}
					}
					break;
				case KeyEvent.VK_DOWN:
					if ((img.getX() == 477) && (img.getY() == 535)) {
						img.setLocation(img.getX(), img.getY()+95);
						img.repaint();
					} else {
						if ((img.getX() == 477) && (img.getY()+85 == 535)) {
							img.setLocation(img.getX(), img.getY()+85);
							img.repaint();
						} else {
							if (img.getY()+80 <= 640) {
								img.setLocation(img.getX(), img.getY()+80);
								img.repaint();
							}
						}
					}
					break;
				case KeyEvent.VK_RIGHT:
					if ((img.getX() == 477) && (img.getY() == 630)) {
						img.setLocation(img.getX(), img.getY()-20);
					} else {
						if ((img.getX()+50 == 477) && (img.getY()+20 == 630)) {
							img.setLocation(img.getX(), img.getY()+20);
						}
					}
					if ((img.getX() == 477) && (img.getY() == 535)) {
						img.setLocation(img.getX(), img.getY()-5);
					} else {
						if ((img.getX()+50 == 477) && (img.getY()+5 == 535)) {
							img.setLocation(img.getX(), img.getY()+5);
						}
					}
					if (img.getX()+50 < 602) {
						img.setLocation(img.getX()+50, img.getY());
						img.repaint();
					}
					break;
				case KeyEvent.VK_LEFT:
					if ((img.getX() == 477) && (img.getY() == 630)) {
						img.setLocation(img.getX(),img.getY()-20);
					} else {
						if ((img.getX()-50 == 477) && (img.getY()+20 == 630)) {
							img.setLocation(img.getX(), img.getY()+20);
						}
					}
					if ((img.getX() == 477) && (img.getY() == 535)) {
						img.setLocation(img.getX(),img.getY()-5);
					} else {
						if ((img.getX()-50 == 477) && (img.getY()+5 == 535)) {
							img.setLocation(img.getX(), img.getY()+5);
						}
					}
					if (img.getX()-50 > 372  ) {
						img.setLocation(img.getX()-50, img.getY());
						img.repaint();
					}
					break;
			}
		}
	}
	
	private void crearVentanas(int paramX, int paramY, ArrayList<ArrayList<JLabel>> ventanas){
		ArrayList<JLabel> aux1;
		int XAux = paramX; //392;
		for (int x = 0; x < 5; x++) {
			aux1 = new ArrayList<JLabel>();	
				int YAux = paramY; //615;
				for (int y = 0; y < 3; y++) {
					if (x != 2) {
						JLabel AuxLabel = new JLabel(new ImageIcon("D:\\Descargas\\fixitfelixcortado\\ventanas_y_panel\\slice100_@.png"));
						AuxLabel.setBounds(XAux, YAux, 40, 60);
						aux1.add(AuxLabel);
						add(AuxLabel);
					} else {
						if (y == 0) {
							JLabel AuxLabel = new JLabel(new ImageIcon("D:\\Descargas\\fixitfelixcortado\\semicirculares\\slice600_@.png"));
							aux1.add(AuxLabel);
							AuxLabel.setBounds(XAux-10, 590, 61, 97);
							add(AuxLabel);
						} else {
							if (y == 1) {
								JLabel AuxLabel = new JLabel(new ImageIcon("D:\\Descargas\\fixitfelixcortado\\semicirculares\\slice602_@.png"));
								aux1.add(AuxLabel);
								AuxLabel.setBounds(XAux-10, YAux, 62, 60);
								add(AuxLabel);
							} else {
								JLabel AuxLabel = new JLabel(new ImageIcon("D:\\Descargas\\fixitfelixcortado\\ventanas_y_panel\\slice100_@.png"));
								aux1.add(AuxLabel);
								AuxLabel.setBounds(XAux, YAux, 40, 60);
								add(AuxLabel);
							}
						}
					}
					YAux-= 80;
				}
			ventanas.add(aux1);
			XAux += 50;
		}	
	}
	
	
		
	
	
	
		
	}





/**
prueba(){
    // Crea un nuevo contenedor JFrame.
    JFrame jfrm=new JFrame("Una simple aplicación Swing");
    // Se le da al cuadro un tamaño inicial.
    jfrm.setSize(475,200);
    // Termine el programa cuando el usuario cierre la aplicación.
    jfrm.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    // Crea una etiqueta basada en texto.
    JLabel jLabel= new JLabel("Une etiqueta.");
    // Agregue la etiqueta al panel de contenido (content pane).
    jfrm.add(jLabel);
    // Visualiza el marco.
    jfrm.setVisible(true);
}
public static void main(String[] args) {
    SwingUtilities.invokeLater(new Runnable() {
        public void run(){
            new prueba();
        }
    });
}

@Override
public void keyPressed(KeyEvent e) {
	
}
 
@Override
public void keyReleased(KeyEvent e) {}
 
@Override
public void keyTyped(KeyEvent e) {}

**/