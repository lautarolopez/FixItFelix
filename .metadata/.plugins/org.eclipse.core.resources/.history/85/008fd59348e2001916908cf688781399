package logica;
import java.util.ArrayList;

public class Partida {

	private int tiempo;
	private int dificultad;
	private Felix pj;
	private Ralph boss;
	private Jugador player;
	private Edificio tablero;
	private ArrayList<Objeto> objetosPartida;
	
	public Partida(String nombre) {
		this.tiempo = 120;
		this.dificultad = 1;
		this.pj = new Felix();
		this.boss = new Ralph();
		this.player = new Jugador(nombre);
		this.tablero = new Edificio(this.dificultad);
		this.objetosPartida = new ArrayList<Objeto>();
	}
	
	
	public void ciclo(String dir, boolean martillazo) {
		//// BLOQUE DE ACCIONES
		
		/**Si Félix da un martillazo en este ciclo repara la ventana en la que se encuentra siempre y cuando
		 * ésta tenga al menos un panel roto. **/
		if (!this.tablero.getVentanas()[this.pj.getPosFelix().getX()][this.pj.getPosFelix().getY()].arreglada()) {
			if (martillazo) {
				this.tablero.getVentanas()[this.pj.getPosFelix().getX()][this.pj.getPosFelix().getY()].reparar();
			}
		}
		
		
		for(Objeto obj : this.objetosPartida) {
			if (obj instanceof Torta) {
				this.pj.setInvulnerable();
				this.objetosPartida.remove(obj);
			} else {
				if (obj instanceof Pajaro) {
					this.objetosPartida.removeAll(objetosPartida);
					this.tablero.reiniciarEtapa(dificultad);
				} else {
					if (obj instanceof Ladrillo) {
						this.pj.perderVida();
						this.tablero = new Edificio(dificultad);
						this.objetosPartida.removeAll(objetosPartida);
					}
				}
			}
		}
		
		
		////BLOQUE DE ACTUALIZACIONES
		
		
	}
	
	
	public void comenzarPartida(){}
	
	public void decTiempo(){}
	
	public void masDificultad(){}
	
	public void reiniciarNivel() {}
	
	
}
